{"pageProps":{"quiz":{"folder":"c-(programming-language)","path":"data/c-(programming-language)/c-quiz.md","questions":[{"text":"#### Q1. Which Code sample will eventually cause the computer to run out of memory?\n\n- %OPTION% :\n\n```c\nwhile(1)\n{\n    char *smallString = (char *) malloc(10);\n}\n```\n\n- %OPTION% :\n\n```c\nlong long number = 1;\n    while(1)\n    number *= 2;\n```\n\n- %OPTION% :\n\n```c\nwhile(1)\n{\n    char hugeString[1000000L];\n    memset(hugeString, 0, 1000000L);\n}\n```\n\n- %OPTION% :\n\n```c\nwhile(1)\n{\n    long *bigArray = (long *) malloc(sizeof(long) * 1000);\n    memset(bigArray, 1000000, 1000);\n    free(bigArray);\n}\n```\n\n","options":3,"answer":0},{"text":"#### Q2. What will this code print on the screen?\n\n```c\nint f1 (int a, int b)\n{\n    if (a > b)\n    {\n        printf(\"A is greater than B\\n\");\n        return 1;\n    }\n    else\n    {\n        printf(\"B is greater than A\");\n        return 0;\n    }\n}\n\nmain()\n{\n    if (f1(20,10) || f1(10,20))\n        printf(\"C is fun!\\n\");\n}\n```\n\n- %OPTION% :\n\n```\nA is greater then B\nC is fun!\n```\n\n- %OPTION% :\n\n```\nA is greater then B\nB is greater then A\nC is fun!\n```\n\n- %OPTION% :\n\n```\nA is greater then B\nB is greater then A\n```\n\n- %OPTION% Nothing is printed on Screen\n\n","options":3,"answer":0},{"text":"#### Q3. What is the name for calling a function inside the same function?\n\n- %OPTION% recursion\n- %OPTION% subfunction\n- %OPTION% inner call\n- %OPTION% infinite loop\n\n","options":3,"answer":0},{"text":"#### Q4. What does the declaration of variable c2 demonstrate?\n\n```c\nmain(){\n    char c1 ='a';\n    char c2 = c1+10;\n}\n```\n\n- %OPTION% character arithmetic\n- %OPTION% undefined assignment\n- %OPTION% type conversion\n- %OPTION% invalid declaration\n\n","options":3,"answer":0},{"text":"#### Q5. What is this declaration an example of?\n\n```c\nstruct s {\n    int i;\n    struct s *s1;\n    struct s *s2;\n};\n```\n\n- %OPTION% a node\n- %OPTION% a linked list\n- %OPTION% a stack\n- %OPTION% a binary tree\n\n","options":3,"answer":0},{"text":"#### Q6. Header files are listed using the preprocessing directive #include, and can have one of the following formats: #include &lt;fileA&gt; or #include \"fileB\". What is the difference between these two formats?\n\n- %OPTION% The preprocessor will try to locate fileA in same directory as the source file, and the fileB in a predetermined directory path.\n- %OPTION% The preprocessor will try to locate fileA in the fixed system directory. It will try to locate fileB in the directory path designated by the -I option added to the command line while compiling the source code.\n- %OPTION% The file using the fileA syntax must be system files, of unlimited number; fileB must be a user file at a maximun of one per source file.\n- %OPTION% The preprocessor will try to locate fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path.\n\n","options":3,"answer":3},{"text":"#### Q7. Using a for loop, how could you write a C code to count down from 10 to 1 and display each number on its own line?\n\n- %OPTION% :\n\n```c\nfor (int i = 0; i>=0, i--){\n    printf(\"%d\\n\", i);\n}//end of loop\n```\n\n- %OPTION% :\n\n```c\nint i;\nfor (i=1; i<=10; i++){\n    printf(\"%d\", i);\n}\n```\n\n- %OPTION% :\n\n```c\nint i = 10;\nwhile (i>0){\n    printf(\"%d\\n\", i);\n    i--;\n}\n```\n\n- %OPTION% :\n\n```c\nint i;\nfor (i= 10; i>0; i--){\n    printf(\"%d\\n\", i);\n}// end of loop\n```\n\n","options":3,"answer":3},{"text":"#### Q8. What is not one of the reserved words in standard C?\n\n- %OPTION% volatile\n- %OPTION% typeof\n- %OPTION% register\n- %OPTION% typedef\n\n[Reference](https://www.ibm.com/docs/en/adfz/developer-for-zos/14.2.0?topic=programs-c-reserved-keywords)\n\n","options":3,"answer":1},{"text":"#### Q9. What does the program shown below return?\n\n```c\nint main(){\n    int a=1, b=2, c=3, d=4;\n    int x = a;\n    if (a>b)\n    if (b<c) x=b;\n    else x=c;\n    return(x);\n}\n```\n\n- %OPTION% 1\n- %OPTION% 3\n- %OPTION% 2\n- %OPTION% 0\n\n","options":3,"answer":0},{"text":"#### Q10. Using the Union declaration below, how many bytes of memory space will the data of this type occupy?\n\n```c\nunion Cars {\n    char make[20];\n    char model[30];\n    short year;\n} car;\n```\n\n- %OPTION% 32\n- %OPTION% 54\n- %OPTION% 30\n- %OPTION% 52\n\n","options":3,"answer":2},{"text":"#### Q11. In this code sample, what is not a problem for C compiler?\n\n```c\nmain(){\n    constant int PI = 3.14;\n    printf(\"%f\\n\", pi);\n}\n```\n\n- %OPTION% The value of PI needs to be set to 3.141593, not 3.14\n- %OPTION% The declaration of PI needs to say const, not constant.\n- %OPTION% The data type of PI needs to be float not int.\n- %OPTION% The printf statement needs to use PI, not pi.\n\n","options":3,"answer":0},{"text":"#### Q12. Which is the smallest program to compile and run without errors?\n\n- %OPTION% main()\n- %OPTION% int main() {return 0;}\n- %OPTION% main() { }\n- %OPTION% main() { ; }\n\n[Reference](https://www.beningo.com/150-the-wolrds-shortest-c-program/)\n\n","options":3,"answer":2},{"text":"#### Q13. What is optional in a function declaration?\n\n- %OPTION% data type of parameters\n- %OPTION% return type of function\n- %OPTION% parameter names\n- %OPTION% number of parameters\n\n","options":3,"answer":2},{"text":"#### Q14. C treats all devices, such as the display and the keyboard, as files. Which file opens automatically when a program executes?\n\n- %OPTION% stdout\n- %OPTION% stdio.h\n- %OPTION% default.h\n- %OPTION% string.h\n\n","options":3,"answer":0},{"text":"#### Q15. In which segment does dynamic memory allocation takes place?\n\n- %OPTION% BSS Segment\n- %OPTION% stack\n- %OPTION% heap\n- %OPTION% data segment\n\n[Reference](http://www.it.uc3m.es/pbasanta/asng/course_notes/dynamic_memory_heap_en.html#:~:text=The%20dynamic%20memory%20that%20is,reads%20a%20set%20of%20words.)\n\n","options":3,"answer":2},{"text":"#### Q16. Which function do you use to deallocate memory?\n\n- %OPTION% dalloc()\n- %OPTION% dealloc()\n- %OPTION% release()\n- %OPTION% free()\n\n[Reference](https://www.tutorialspoint.com/c_standard_library/c_function_free.htm)\n\n","options":3,"answer":3},{"text":"#### Q17. In C language what are the basic building blocks that are constructed together to write a program?\n\n- %OPTION% keywords\n- %OPTION% identifiers\n- %OPTION% tokens\n- %OPTION% functions\n\n","options":3,"answer":2},{"text":"#### Q18. When is memory for a variable allocated?\n\n- %OPTION% during the assigment of the variable\n- %OPTION% during the initialization of the variable\n- %OPTION% during the declaration of the variable\n- %OPTION% during the definition of the variable\n\n","options":3,"answer":2},{"text":"#### Q19. C uses the call by value method to pass arguments to functions. How can you invoke the call by reference method?\n\n- %OPTION% by using pointers\n- %OPTION% by declaring functions separately from defining them\n- %OPTION% by using recursive functions\n- %OPTION% by using global variables\n\n","options":3,"answer":0},{"text":"#### Q20. A union allows you to store different `___` in the same `___`.\n\n- %OPTION% Objects; Structure\n- %OPTION% Variables; Declaration\n- %OPTION% Data types; Memory space\n- %OPTION% Arrays; Header file\n\n","options":3,"answer":2},{"text":"#### Q21. What is the output of this program?\n\n```c\nmain() {\n    char c1='a' , c2='A';\n    int i=c2-c1;\n    printf(\"%d\", i);\n}\n```\n\n- %OPTION% 32\n- %OPTION% Runtime error\n- %OPTION% -32\n- %OPTION% 0\n\n","options":3,"answer":2},{"text":"#### Q22. What is the difference between scanf() and sscanf() functions?\n\n- %OPTION% The scanf() function reads data formatted as a string; The sscanf() function reads string input from the screen.\n- %OPTION% The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.\n- %OPTION% The scanf() function reads string data from the keyboard; The sscanf() function reads string data from a string.\n- %OPTION% The scanf() function reads formatted data from a file; The sscanf() function reads input from a selected string\n\n","options":3,"answer":1},{"text":"#### Q23. What is not a valid command with this declaration?\n\n```c\nchar *string[20] = { \"one\", \"two\", \"three\"};\n```\n\n- %OPTION% `printf(\"%c\", string[1][2]);`\n- %OPTION% `printf(\"%s\", string[1][2]);`\n- %OPTION% `printf(\"%s\", string[1]);`\n- %OPTION% `printf(string[1]);`\n\n","options":3,"answer":1},{"text":"#### Q24. What is the expression player->name equivalent to?\n\n- %OPTION% `player.name`\n- %OPTION% `(*player).name`\n- %OPTION% `*player.name`\n- %OPTION% `player.*name`\n\n","options":3,"answer":1},{"text":"#### Q25. Which program will compile and run without errors?\n\n- %OPTION% :\n\n```c\nmain() {\n    for(i=0; i<10; i++) ;\n}\n```\n\n- %OPTION% :\n\n```c\nmain() {\nint i=0;\n    for(; i<10; i++) ;\n}\n```\n\n- %OPTION% :\n\n```c\nmain() {\n    int i;\n    for(i=0; i<j; i++) ;\n}\n```\n\n- %OPTION% :\n\n```c\nmain() {\nint i;\n    for (i= 10; i<10; i++)\n}\n```\n\n","options":3,"answer":1},{"text":"#### Q26. What does this function call return?\n\n```c\n1 main() { float x = f1(10, 5); }\n2 float f1(int a, int b) { return (a/b); }\n```\n\n- %OPTION% 2\n- %OPTION% 2.000000\n- %OPTION% a runtime error\n- %OPTION% a compiler error\n\n","options":3,"answer":3},{"text":"#### Q27. What does this program create?\n\n```c\n#include <stdio.h>\nint main() {\n    int *p = NULL;\n    return 0;\n}\n```\n\n- %OPTION% a runtime error\n- %OPTION% a NULL pointer\n- %OPTION% a compile error\n- %OPTION% a void pointer\n\n","options":3,"answer":1},{"text":"#### Q28. What is an alternative way to write the expression (\\*x).y?\n\n- %OPTION% There is no equivalent.\n- %OPTION% x->y\n- %OPTION% \\*x->y\n- %OPTION% y->x\n\n","options":3,"answer":1},{"text":"#### Q29. Compile time errors are static errors that can be found where in the code?\n\n- %OPTION% in declarations and definitions\n- %OPTION% in functions and expressions\n- %OPTION% in syntax and semantics\n- %OPTION% in objects and statements\n\n","options":3,"answer":0},{"text":"#### Q30. File input and output (I/O) in C is heavily based on the way it is done `___`?\n\n- %OPTION% in Unix\n- %OPTION% in C++\n- %OPTION% in C#\n- %OPTION% in DOS\n\n","options":3,"answer":0},{"text":"#### Q31. What does the strcmp(str1, str2); function return?\n\n- %OPTION% 0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2\n- %OPTION% true (1) if str1 and str2 are the same, false (0) if str1 and str2 are not the same\n- %OPTION% true (1) if str1 and str2 are the same, NULL if str1 and str2 are not the same\n- %OPTION% 0 if str1 and str2 are the same, a negative number if str2 is less than str1, a positive number if str2 is greater than str1\n\n","options":3,"answer":0},{"text":"#### Q32. What is the output of this program?\n\n```c\nint a=10, b=20;\nint f1(a) { return(a*b); }\nmain() {\nprintf(\"%d\", f1(5));\n}\n```\n\n- %OPTION% 100\n- %OPTION% 200\n- %OPTION% 5\n- %OPTION% 50\n\n","options":3,"answer":0},{"text":"#### Q33. Which is _not_ a correct way to declare a string variable?\n\n- %OPTION% `char *string = \"Hello World\";`\n- %OPTION% `char string = \"Hello World\";`\n- %OPTION% `char string[20] = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};`\n- %OPTION% `char string[] = \"Hello World\";`\n\n","options":3,"answer":1},{"text":"#### Q34. Which choice is an include guard for the header file mylib.h?\n\n- %OPTION% :\n\n```c\n#ifdef MYLIB_H\n#undef MYLIB_H\n\n// mylib.h content\n\n#endif /* MYLIB_H */\n```\n\n- %OPTION% :\n\n```c\n#ifndef MYLIB_H\n#define MYLIB_H\n\n// mylib.h content\n\n#endif /* MYLIB_H */\n```\n\n- %OPTION% :\n\n```c\n#define MYLIB_H\n#include \"mylib.h\"\n\n#undef MYLIB_H\n```\n\n- %OPTION% :\n\n```c\n#ifdef MYLIB_H\n#define MYLIB_H\n\n// mylib.h content\n\n#endif /* MYLIB_H */\n```\n\n","options":3,"answer":1},{"text":"#### Q35. How many times does the code inside the while loop get executed in this program?\n\n```c\nmain(){\n int x=1;\n while(x++<100){\n    x*=x;\n    if(x<10) continue;\n    if(x>50) break;\n }\n}\n```\n\n- %OPTION% 100\n- %OPTION% 3\n- %OPTION% 5\n- %OPTION% 50\n\n","options":3,"answer":1},{"text":"#### Q36. File input and output (I/O) in C is done through what?\n\n- %OPTION% syntax-driven components\n- %OPTION% native interfaces\n- %OPTION% system objects\n- %OPTION% function calls\n\n","options":3,"answer":3},{"text":"#### Q37. Directives are translated by the?\n\n- %OPTION% Pre-processor\n- %OPTION% Compiler\n- %OPTION% Linker\n- %OPTION% Editor\n\n","options":3,"answer":0},{"text":"#### Q38. The main loop structures in C programming are the for loop, the while loop, and which other loop?\n\n- %OPTION% do...while\n- %OPTION% for...in\n- %OPTION% repeat...until\n- %OPTION% do...until\n\n","options":3,"answer":0},{"text":"#### Q39. By default, C Functions are what type of functions?\n\n- %OPTION% global\n- %OPTION% static\n- %OPTION% library\n- %OPTION% system\n\n","options":3,"answer":2},{"text":"#### Q40. You have written a function that you want to include as a member of structure a. How is such as structure member defiened?\n\n- %OPTION% :\n\n```c\nstruct a {\n    void *f1;\n};\n```\n\n- %OPTION% :\n\n```c\nstruct a {\n    void (*f1)();\n};\n```\n\n- %OPTION% :\n\n```c\nstruct a {\n    *(void *f1)();\n};\n```\n\n- %OPTION% :\n\n```c\nstruct a {\n    void *f1();\n};\n```\n\n","options":3,"answer":0},{"text":"#### Q41. A Stack data structure allows all data operations at one end only, making it what kind of an implementation?\n\n- %OPTION% FIFO\n- %OPTION% LIFO\n- %OPTION% LILO\n- %OPTION% LOLI\n\n","options":3,"answer":1},{"text":"#### Q42. What does this program display?\n\n```c\nmain(){\n    char *p = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    int i;\n    for (i=0;i<5;i++) *p++; *p++;\n    printf(\"%c\",*p++);\n}\n```\n\n- %OPTION% K\n- %OPTION% M\n- %OPTION% H\n- %OPTION% G\n\n","options":3,"answer":3},{"text":"#### Q43. Describe the relationship between lvalue and rvalue.\n\n- %OPTION% An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear only on the right-hand side.\n- %OPTION% An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear on either the left-hand or right-hand side.\n- %OPTION% An lvalue and an rvalue may appear on either left-hand or right-hand side of an assignment.\n- %OPTION% An lvalue may appear on the left-hand or right-hand side of an assignment; an rvalue may appear only on the right-hand side.\n\n","options":3,"answer":3},{"text":"#### Q44. Which operator is used to access the address of a variable?\n\n- %OPTION% `%`\n- %OPTION% `**`\n- %OPTION% `*`\n- %OPTION% `&`\n\n","options":3,"answer":3},{"text":"#### Q45. Which add function properly returns the updated value of result?\n\n- %OPTION% :\n\n```c\nvoid add (int a, int b, int *result)\n{\n    *result = a+b;\n}\n\nmain()\n{\n    int a = 10;\n    int b = 20;\n    int result = 0;\n\n    add(a,b,&result);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid add (int a, int b, int result)\n{\n    result = a+b;\n}\n\nmain()\n{\n    int a = 10;\n    int b = 20;\n    int result = 0;\n\n    add(a,b,result);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid add (int a, int b, int *result)\n{\n    result = a+b;\n}\n\nmain()\n{\n    int a = 10;\n    int b = 20;\n    int result = 0;\n\n    add(a,b,result);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid add (int *a, int *b, int *result)\n{\n    result = a+b;\n}\n\nmain()\n{\n    int a = 10;\n    int b = 20;\n    int result = 0;\n\n    add(*a,*b,*result);\n}\n```\n\n","options":3,"answer":0},{"text":"#### Q46. Consider the number of the Fibonacci series below 100: 0,1,1,2,3,5,8,13,21,34,55,89. Which piece of code outputs the sequence?\n\n- %OPTION% :\n\n```c\nvoid fibonacci(int a, int b)\n{\n    int c = a+b;\n\n    if(a>100)\n       return;\n\n    printf(\"%d\", a);\n\n    fibonacci(a,b);\n}\n\nint main()\n{\n    fibonacci(0,1);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid fibonacci(int a, int b)\n{\n    int c = a+b;\n\n    if(a>100)\n       return;\n\n    printf(\"%d\", b);\n\n    fibonacci(a,c);\n}\n\nint main()\n{\n    fibonacci(0,1);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid fibonacci(int a, int b)\n{\n    int c = a+b;\n\n    if(a>100)\n       return;\n\n    printf(\"%d\", a);\n\n    fibonacci(b,c);\n}\n\nint main()\n{\n    fibonacci(0,1);\n}\n```\n\n- %OPTION% :\n\n```c\nvoid fibonacci(int a, int b)\n{\n    int c = a+b;\n\n    if(a>100)\n       return;\n\n    printf(\"%d\", c);\n\n    fibonacci(b,c);\n}\n\nint main()\n{\n    fibonacci(0,1);\n}\n```\n\n","options":3,"answer":2},{"text":"#### Q47. Which is _not_ a storage class specifier?\n\n- %OPTION% `intern`\n- %OPTION% `extern`\n- %OPTION% `register`\n- %OPTION% `static`\n\n[Reference](https://en.cppreference.com/w/cpp/language/storage_duration)\n\n","options":3,"answer":0},{"text":"#### Q48. Which line of code, after execution, results in `i` having the value of 1?\n\n- %OPTION% `for(i=1; i<=1; i++);`\n- %OPTION% `for(i=1; i=10; i++);`\n- %OPTION% `for(i=1; i==10; i++);`\n- %OPTION% `for(i=10; i>=1; i--);`\n\n","options":3,"answer":2},{"text":"#### Q49. What is the value of variable c at the end of this program?\n\n```\n1 main() {\n2   int a, b, c;\n3   a=10; b=50;\n4   c=a * b % a;\n5 }\n```\n\n- %OPTION% 50\n- %OPTION% 5\n- %OPTION% 0\n- %OPTION% 500\n\n","options":3,"answer":2},{"text":"#### Q50. What is _not_ one of the basic data types in C\n\n- %OPTION% long double\n- %OPTION% unsigned char\n- %OPTION% array\n- %OPTION% float\n\n","options":3,"answer":2},{"text":"#### Q51. What is the member access operator for a structure?\n\n- %OPTION% ,\n- %OPTION% []\n- %OPTION% .\n- %OPTION% :\n\n","options":3,"answer":2},{"text":"#### Q52. What standard data type provides the smallest storage size and can be used in computations?\n\n- %OPTION% char\n- %OPTION% float\n- %OPTION% int\n- %OPTION% short\n\n","options":3,"answer":0},{"text":"#### Q53. what does the ctype tolower() function do?\n\n- %OPTION% It returns TRUE for lowercase letters of the alphabet.\n- %OPTION% It ensures that text output uses only ASCII values (0 through 127).\n- %OPTION% It returns FALSE for lowercase letters of the alphabet.\n- %OPTION% It converts an uppercase letter of the alphabet to lowercase.\n\n","options":3,"answer":3},{"text":"#### Q54. Void pointer _vptr_ is assigned the address of float variable _g_. What is a valid way to dereference _vptr_ to assign its pointed value to a float variable named _f_ later in the program?\n\n```c\nfloat g;\nvoid *vptr=&g;\n```\n\n- %OPTION% `f=(float *)vptr;`\n- %OPTION% `f=*(float *)vptr;`\n- %OPTION% `f=*(float)vptr;`\n- %OPTION% `f=(float)*vptr;`\n\n","options":3,"answer":1},{"text":"#### Q55. The dynamic memory allocation functions are defined in which system header file ?\n\n- %OPTION% stdio.h\n- %OPTION% stdlib.h\n- %OPTION% limits.h\n- %OPTION% stddef.h\n\n","options":3,"answer":1},{"text":"#### Q56. A function is a set of **\\_**.\n\n- %OPTION% declarations\n- %OPTION% statements\n- %OPTION% variables\n- %OPTION% objects\n\n","options":3,"answer":1},{"text":"#### Q57. How are static functions different from global functions?\n\n- %OPTION% Static functions must be declared in advance of being defined.\n- %OPTION% Static functions must be declared is a separate header file.\n- %OPTION% Static functions always return the same value.\n- %OPTION% Static functions can be accessed only in the file where they are declared.\n\n","options":3,"answer":3},{"text":"#### Q58. Which code example creates the string \"Hello Mars\" in storage buffer `hello`.\n\n- %OPTION% :\n\n```c\n    char hello[25];\n    strcpy(hello, \"Hello \");\n    strcpy(hello, \"Mars\");\n```\n\n- %OPTION% :\n\n```c\n    char hello[25];\n    char *p;\n    strcpy(hello, \"Hello World\");\n    p = hello;\n    p +=6;\n    strcpy(p, \"Mars\");\n```\n\n- %OPTION% :\n\n```c\n    char *hello;\n    strcpy(hello, \"Hello World\");\n    hello+=6;\n    strcpy(hello, \"Mars\");\n```\n\n- %OPTION% :\n\n```c\n    char hello[25];\n    strcpy(hello, \"Hello World\");\n    strcpy(*hello[6], \"Mars\");\n```\n\n","options":3,"answer":1},{"text":"#### Q59. If you use the fopen() function with the \"a\" mode, what happens if the named file doesn't exist?\n\n- %OPTION% The file is created and opened for reading.\n- %OPTION% The file is created and opened for writing.\n- %OPTION% The fopen() function returns a NULL indicating that the operation has failed.\n- %OPTION% The file is created and opened for both writing and reading\n\n[Reference](https://www.tutorialspoint.com/c_standard_library/c_function_fopen.htm)\n\n","options":3,"answer":1},{"text":"#### Q60. What does this function return?\n\n```c\nint fl(int a, int b) { return(a>b?a:b); }\n```\n\n- %OPTION% compiler error\n- %OPTION% the smaller value of the two passed parameters\n- %OPTION% runtime error\n- %OPTION% the greater value of the two passed parameters\n\n","options":3,"answer":3}],"title":"## C (Programming Language)"},"lang":"en","availableLanguages":[{"isSelected":true,"name":"English","key":"en"}],"dictionary":{"en":{"CHEER":"ALRIGHT! LET'S GOOO!","TITLE":"Skill Assessments Quizzes","DESC":"Collection of questions and answers on different subjects aimed to help\nyou test your knowledge before an important job interview!\n\nData from __data__. UI by __bandinopla__\n","FILTER_BY_NAME":"Filter by name","BACK_TO_HOME":"back to home","SCORE":"Score","X_CORRECT":"__X__ correct","X_INCORRECT":"__X__ incorrect","X_UNANSWERED":"__X__ unanswered","BUTTON_RESET":"Reset","BUTTON_PREVIOUS":"Prev","BUTTON_NEXT":"Next","SOURCE_CODE":"Source Code","QUIZ":"Quiz","QUIZ_AVAILABLE_IN":"Quiz available in","QUIZ_ONLY_AVAILABLE_IN":"Quiz only available in","LANG_NAME":"English"},"es":{"CHEER":"TODO LISTO! VAMOS!!","TITLE":"Questionarios de evaluación de habilidades","DESC":"Colección de preguntas y respuestas sobre diferentes temas orientadas a\nayudarte a testear tu conocimiento antes de una importante entrevista de trabajo! \n\nDatos de __data__. UI por __bandinopla__\n","FILTER_BY_NAME":"Filtrar por nombre","BACK_TO_HOME":"Volver al inicio","SCORE":"Puntaje","X_CORRECT":"__X__ correctas","X_INCORRECT":"__X__ incorrectas","X_UNANSWERED":"__X__ sin responder","BUTTON_RESET":"Reiniciar","BUTTON_PREVIOUS":"Atrás","BUTTON_NEXT":"Siguente","SOURCE_CODE":"Código fuente","QUIZ":"Questionario","QUIZ_AVAILABLE_IN":"Questionario disponible en","QUIZ_ONLY_AVAILABLE_IN":"Questionario solo disponible en","LANG_NAME":"Español"}}},"__N_SSG":true}